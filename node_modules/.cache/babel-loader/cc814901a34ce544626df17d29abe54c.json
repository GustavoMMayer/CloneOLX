{"ast":null,"code":"import Cookies from 'js-cookie';\nimport qs from 'qs';\nconst BASEAPI = 'http://localhost:3001';\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get('token');\n    if (token) {\n      body.token = token;\n    }\n  }\n  const res = await fetch(BASEAPI + endpoint, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n  return json;\n};\nconst apiFetchGet = async function (endpoint) {\n  let body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!body.token) {\n    let token = Cookies.get('token');\n    if (token) {\n      body.token = token;\n    }\n  }\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\n  const json = await res.json();\n  if (json.notallowed) {\n    window.location.href = '/signin';\n    return;\n  }\n  return json;\n};\nconst OlxAPI = {\n  login: async (email, password) => {\n    const json = await apiFetchPost('/user/signin', {\n      email,\n      password\n    });\n    return json;\n  },\n  register: async (name, email, password, stateLoc) => {\n    const json = await apiFetchPost('/user/signup', {\n      name,\n      email,\n      password,\n      state: stateLoc\n    });\n    return json;\n  },\n  getStates: async () => {\n    const json = await apiFetchGet('/states');\n    return json.states;\n  }\n};\nexport default (() => OlxAPI);","map":{"version":3,"names":["Cookies","qs","BASEAPI","apiFetchPost","endpoint","body","token","get","res","fetch","method","headers","JSON","stringify","json","notallowed","window","location","href","apiFetchGet","OlxAPI","login","email","password","register","name","stateLoc","state","getStates","states"],"sources":["C:/Users/Dell/Documents/Gustavo/React/Projeto OLX/Pronto site cadastro/src/helpers/OlxAPI.js"],"sourcesContent":["import Cookies from 'js-cookie';\nimport qs from 'qs';\n\nconst BASEAPI = 'http://localhost:3001';\n\nconst apiFetchPost = async (endpoint, body) => {\n    if(!body.token) {\n        let token = Cookies.get('token');\n        if(token) {\n            body.token = token;\n        }\n    }\n    const res = await fetch(BASEAPI+endpoint, {\n        method:'POST',\n        headers:{\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body:JSON.stringify(body)\n    });\n    const json = await res.json();\n\n    if(json.notallowed) {\n        window.location.href = '/signin';\n        return;\n    }\n\n    return json;\n}\nconst apiFetchGet = async (endpoint, body = []) => {\n    if(!body.token) {\n        let token = Cookies.get('token');\n        if(token) {\n            body.token = token;\n        }\n    }\n    const res = await fetch(`${BASEAPI+endpoint}?${qs.stringify(body)}`);\n    const json = await res.json();\n\n    if(json.notallowed) {\n        window.location.href = '/signin';\n        return;\n    }\n\n    return json;\n}\n\nconst OlxAPI = {\n\n    login:async (email, password) => {\n        const json = await apiFetchPost(\n            '/user/signin',\n            {email, password}\n        );\n        return json;\n    },\n\n    register:async (name, email, password, stateLoc) => {\n        const json = await apiFetchPost(\n            '/user/signup',\n            {name, email, password, state:stateLoc}\n        );\n        return json;\n    },\n\n    getStates:async () => {\n        const json = await apiFetchGet(\n            '/states'\n        );\n        return json.states;\n    }\n\n};\n\nexport default () => OlxAPI;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,EAAE,MAAM,IAAI;AAEnB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC3C,IAAG,CAACA,IAAI,CAACC,KAAK,EAAE;IACZ,IAAIA,KAAK,GAAGN,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;IAChC,IAAGD,KAAK,EAAE;MACND,IAAI,CAACC,KAAK,GAAGA,KAAK;IACtB;EACJ;EACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACP,OAAO,GAACE,QAAQ,EAAE;IACtCM,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDN,IAAI,EAACO,IAAI,CAACC,SAAS,CAACR,IAAI;EAC5B,CAAC,CAAC;EACF,MAAMS,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAI,EAAE;EAE7B,IAAGA,IAAI,CAACC,UAAU,EAAE;IAChBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS;IAChC;EACJ;EAEA,OAAOJ,IAAI;AACf,CAAC;AACD,MAAMK,WAAW,GAAG,gBAAOf,QAAQ,EAAgB;EAAA,IAAdC,IAAI,uEAAG,EAAE;EAC1C,IAAG,CAACA,IAAI,CAACC,KAAK,EAAE;IACZ,IAAIA,KAAK,GAAGN,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC;IAChC,IAAGD,KAAK,EAAE;MACND,IAAI,CAACC,KAAK,GAAGA,KAAK;IACtB;EACJ;EACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAO,GAACE,QAAS,IAAGH,EAAE,CAACY,SAAS,CAACR,IAAI,CAAE,EAAC,CAAC;EACpE,MAAMS,IAAI,GAAG,MAAMN,GAAG,CAACM,IAAI,EAAE;EAE7B,IAAGA,IAAI,CAACC,UAAU,EAAE;IAChBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS;IAChC;EACJ;EAEA,OAAOJ,IAAI;AACf,CAAC;AAED,MAAMM,MAAM,GAAG;EAEXC,KAAK,EAAC,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC7B,MAAMT,IAAI,GAAG,MAAMX,YAAY,CAC3B,cAAc,EACd;MAACmB,KAAK;MAAEC;IAAQ,CAAC,CACpB;IACD,OAAOT,IAAI;EACf,CAAC;EAEDU,QAAQ,EAAC,OAAOC,IAAI,EAAEH,KAAK,EAAEC,QAAQ,EAAEG,QAAQ,KAAK;IAChD,MAAMZ,IAAI,GAAG,MAAMX,YAAY,CAC3B,cAAc,EACd;MAACsB,IAAI;MAAEH,KAAK;MAAEC,QAAQ;MAAEI,KAAK,EAACD;IAAQ,CAAC,CAC1C;IACD,OAAOZ,IAAI;EACf,CAAC;EAEDc,SAAS,EAAC,YAAY;IAClB,MAAMd,IAAI,GAAG,MAAMK,WAAW,CAC1B,SAAS,CACZ;IACD,OAAOL,IAAI,CAACe,MAAM;EACtB;AAEJ,CAAC;AAED,gBAAe,MAAMT,MAAM"},"metadata":{},"sourceType":"module"}